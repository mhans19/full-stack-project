<div class="jumbotron">
  {{#each this}}
    <h1 class="display-4">{{title}}</h1>
    <p class="lead">{{description}}</p>
  {{/each}}
  <hr class="my-4">
  <p class="lead">
    <!-- Button trigger modal -->
    <button class="btn btn-primary btn-lg" data-toggle="modal" data-target="#contributionModal" role="button">Contribute To This Project</button>
  </p>
</div>

{{#if loggedIn}}
<!-- Modal -->
<div class="modal fade" id="contributionModal" tabindex="-1" role="dialog" aria-labelledby="contributionModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title text-center" id="contributionModalLabel">Contribute to This Project</h4>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <form class="contribution-form p-4">
          <div class="form-group row">
            <label for="project-contributions">Select Contribution Type:</label>
            <select class="form-control" type="text" name="project-contributions" id="project-contributions" form="contributionForm">
              <option value="HTML">HTML</option>
              <option value="CSS">CSS</option>
              <option value="JavaScript">JavaScript</option>
              <option value="APIs">APIs</option>
              <option value="PHP">PHP</option>
              <option value="Node">Node</option>
              <option value="OOP">OOP</option>
              <option value="Express">Express</option>
              <option value="Shell">Shell</option>
              <option value="SQL">SQL</option>
              <option value="ORM">ORM</option>
              <option value="MVC">MVC</option>
              <option value="NoSQL">NoSQL</option>
              <option value="PWA">PWA</option>
              <option value="React">React</option>
              <option value="MERN">MERN</option>
              <option value="State">State</option>
            </select>
          </div>
          <div class="form-group row">
            <label for="contribution-hours">Hours Spent on Contribution:</label>
            <input class="form-control" type="text" id="contribution-hours" name="contribution-hours">
          </div>
          <div class="form-group row">
              <label for="contribution-description">Contribution Description:</label>
              <textarea type="text" class="form-control" id="contribution-description" name="contribution-description" rows="3"></textarea>
          </div>
          <div class="form-group">
            <button type="submit" class="btn btn-primary btn-block font-weight-bold">Submit Contribution</button>
            <button type="button" class="btn btn-light btn-block font-weight-bold" data-dismiss="modal">Close</button>
          </div>
      </form>
      </div>
    </div>
  </div>
</div>
<script src="/javascript/contribution.js"></script>
{{else}}
<div class="modal fade" id="contributionModal" tabindex="-1" role="dialog" aria-labelledby="errorModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div class="container m-6 text-center font-weight-bold pb-3">
          <img src="https://img.icons8.com/ultraviolet/80/000000/crying.png"/>
          <h1 class = "fonct-weight-bold">Uh Oh!</h1>
          <p class='text-secondary'>You must <a class="badge badge-primary" href = "/login">login</a> to contribute to a project!</p>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>
{{/if}}
<div class="jumbotron">
  <h1 class="display-4">Project Contributions</h1>
  <hr class="my-4">
  <p class="lead">
    <!-- Button trigger modal -->
    <button class="btn btn-primary btn-lg" data-toggle="modal" data-target="#logModal" role="button">View Contribution Log</button>
  </p>
  <hr class="my-4">
  <canvas id="contChart" width="400px" height="100px">
   {{!-- This is where chart goes --}}
  </canvas>
</div>
{{!-- Project Log Modal --}}
<div class="modal fade" id="logModal" tabindex="-1" role="dialog" aria-labelledby="logModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title text-center" id="contributionModalLabel">All Project Contributions</h4>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        {{#each this}}
        {{#each contributions}}
          <div class="col-sm-12">
            <h5 class = "font-weight-bold border-top text-center">{{user.username}}</h5>
            <p class = "border-bottom">
              Contribution Type: {{this.contribution_type}} <br>
              Contribution Hours: {{this.contribution_hours}} <br>
              Contribution Description: {{this.contribution_description}} <br>
            </p>
          </div>
        {{/each}}
      {{/each}}
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>
{{!-- Contribution Graphic --}}
<script>
  const cont = [];
</script>
{{#each this}}
  {{#each contributions}}
  <script>
  cont.push({
    "type": "{{{this.contribution_type}}}",
    "hours": Number("{{{this.contribution_hours}}}")
  });
  </script>
  {{/each}}
{{/each}}
<script>
  const
    dat = cont,
    dit = dat.reduce((r, { type, hours }) => {
        var item = r.find(o => o.type === type);
        if (!item) {
            item = { type, hours: 0 };
            r.push(item);
        }
        item.hours += hours;
        return r;
    }, []);

  var type = dit.map(function(dit) {
    return dit.type;
  });

  var hours = dit.map(function(dit) {
    return dit.hours;
  });
</script>


<script>
  window.onload = function () {
  var ctx = document.getElementById('contChart');
  
  var data = {
      labels: type,
      datasets: [{
          data: hours,
          label: "Hours",
          backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(200, 99, 132, 0.2)',
                    'rgba(154, 162, 235, 0.2)',
                    'rgba(385, 206, 86, 0.2)',
                    'rgba(255, 199, 132, 0.2)',
                    'rgba(54, 62, 235, 0.2)',
                    'rgba(255, 106, 86, 0.2)',
                    'rgba(200, 199, 132, 0.2)',
                    'rgba(154, 262, 235, 0.2)',
                    'rgba(385, 106, 86, 0.2)',
                    'rgba(255, 99, 232, 0.2)',
                    'rgba(54, 162, 135, 0.2)',
                    'rgba(255, 206, 186, 0.2)',
                    'rgba(200, 99, 232, 0.2)',
                    'rgba(154, 162, 135, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(200, 99, 132, 0.2)',
                    'rgba(154, 162, 235, 0.2)',
                    'rgba(385, 206, 86, 0.2)',
                    'rgba(255, 199, 132, 0.2)',
                    'rgba(54, 62, 235, 0.2)',
                    'rgba(255, 106, 86, 0.2)',
                    'rgba(200, 199, 132, 0.2)',
                    'rgba(154, 262, 235, 0.2)',
                    'rgba(385, 106, 86, 0.2)',
                    'rgba(255, 99, 232, 0.2)',
                    'rgba(54, 162, 135, 0.2)',
                    'rgba(255, 206, 186, 0.2)',
                    'rgba(200, 99, 232, 0.2)',
                    'rgba(154, 162, 135, 0.2)'
                ],
                borderWidth: 1
      }]
  }
    var options = {
      legend: false,
      scales: {
          yAxes: [{
              display: true,
              ticks: {
                  beginAtZero: true,
                  stepSize:10
              }
          }]
      },
      animation: false
  };
  var myBarChart = new Chart(ctx, {
      type: 'bar',
      data: data,
      options: options
  });
    }
  </script>